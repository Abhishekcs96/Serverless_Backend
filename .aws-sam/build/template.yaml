AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'My SAM App To provision and maintain my serverless backend

  '
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
  BackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3.achandrasekar.com
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - '*'
          AllowedMethods:
          - GET
          - PUT
          - POST
          AllowedOrigins:
          - '*'
          MaxAge: '3600'
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: BackupBucket
              - /*
          Condition:
            StringEquals:
              aws:Referer: mN62kbnAl3rtY12!Opg2EDF#P9@
      Bucket:
        Ref: BackupBucket
  UpdateTablefnc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateTablefnc
      Handler: app.lambda_handler
      Timeout: 30
      Runtime: python3.9
      Events:
        Updatevisits:
          Type: Api
          Properties:
            Path: /visits
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
    Metadata:
      SamResourceId: UpdateTablefnc
  UpdateDemoTablefnc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateDemoTablefnc
      Handler: demoapp.lambda_handler
      Timeout: 30
      Runtime: python3.9
      Events:
        Updatevisits:
          Type: Api
          Properties:
            Path: /Stage/visits
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
    Metadata:
      SamResourceId: UpdateDemoTablefnc
  EmailFormfnc:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: EmailFormfnc
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 30
      Environment:
        Variables:
          VERIFIED_EMAIL: abhishekcs96@gmail.com
      Events:
        Emailsend:
          Type: Api
          Properties:
            Path: /contact
            Method: post
      Policies:
      - Statement:
        - Sid: CloudwatchLogsPolicy
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          Resource: arn:aws:logs:ap-southeast-2:054336459332:*
        - Sid: CloudWatchCreatePutPolicy
          Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: arn:aws:logs:ap-southeast-2:054336459332:log-group:/aws/lambda/Mail_fwd:*
        - Sid: VisualEditor0
          Effect: Allow
          Action:
          - ses:SendEmail
          Resource: '*'
    Metadata:
      SamResourceId: EmailFormfnc
  MyDynamoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: MyDynamodbTable
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: false
      Tags:
        Project: VisitCount
  MyDemoDynamoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: MyDemoDynamodbTable
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      SSESpecification:
        SSEEnabled: false
      Tags:
        Project: DemoVisitCount
Outputs:
  UpdateVisitsAPI:
    Description: API Gateway endpoint URL for Prod env for Update Visits
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/visits/
  UpdateDemoVisitsAPI:
    Description: Demo API Gateway endpoint URL for Prod env (but stage)  for Update
      Visits
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/Stage/visits/
  EmailSendAPI:
    Description: API Gateway endpoint URL for Prod env for Email confirmations
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/contact/
  WebsiteURL:
    Value:
      Fn::GetAtt:
      - BackupBucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - BackupBucket
          - DomainName
    Description: Name of S3 bucket to hold website content
